{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dhemanth123/k-nearest-neighbour?scriptVersionId=184886380\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"2196bfd2","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-06-22T11:31:55.302693Z","iopub.status.busy":"2024-06-22T11:31:55.302289Z","iopub.status.idle":"2024-06-22T11:31:56.31143Z","shell.execute_reply":"2024-06-22T11:31:56.309668Z"},"papermill":{"duration":1.021333,"end_time":"2024-06-22T11:31:56.314557","exception":false,"start_time":"2024-06-22T11:31:55.293224","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/iris-csv/Iris.csv\n","/kaggle/input/iriscsv/Iris.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"114ac22e","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:56.331069Z","iopub.status.busy":"2024-06-22T11:31:56.330502Z","iopub.status.idle":"2024-06-22T11:31:57.811364Z","shell.execute_reply":"2024-06-22T11:31:57.810337Z"},"papermill":{"duration":1.492193,"end_time":"2024-06-22T11:31:57.81426","exception":false,"start_time":"2024-06-22T11:31:56.322067","status":"completed"},"tags":[]},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sb"]},{"cell_type":"code","execution_count":3,"id":"1bfa1ada","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:57.83089Z","iopub.status.busy":"2024-06-22T11:31:57.830442Z","iopub.status.idle":"2024-06-22T11:31:57.870352Z","shell.execute_reply":"2024-06-22T11:31:57.869114Z"},"papermill":{"duration":0.051593,"end_time":"2024-06-22T11:31:57.873256","exception":false,"start_time":"2024-06-22T11:31:57.821663","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm      Species\n","0   1            5.1           3.5            1.4           0.2  Iris-setosa\n","1   2            4.9           3.0            1.4           0.2  Iris-setosa\n","2   3            4.7           3.2            1.3           0.2  Iris-setosa\n","3   4            4.6           3.1            1.5           0.2  Iris-setosa\n","4   5            5.0           3.6            1.4           0.2  Iris-setosa"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["#read the data set\n","df=pd.read_csv(\"/kaggle/input/iris-csv/Iris.csv\")\n","df.head()"]},{"cell_type":"code","execution_count":4,"id":"eab6822a","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:57.891513Z","iopub.status.busy":"2024-06-22T11:31:57.891079Z","iopub.status.idle":"2024-06-22T11:31:58.156158Z","shell.execute_reply":"2024-06-22T11:31:58.15482Z"},"papermill":{"duration":0.277712,"end_time":"2024-06-22T11:31:58.158647","exception":false,"start_time":"2024-06-22T11:31:57.880935","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  Species\n","0   1            5.1           3.5            1.4           0.2        0\n","1   2            4.9           3.0            1.4           0.2        0\n","2   3            4.7           3.2            1.3           0.2        0\n","3   4            4.6           3.1            1.5           0.2        0\n","4   5            5.0           3.6            1.4           0.2        0"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["#Convert the categories species colomun into numerical one.\n","from sklearn.preprocessing import LabelEncoder\n","le=LabelEncoder()\n","df[\"Species\"]=le.fit_transform(df[\"Species\"])\n","df.head()"]},{"cell_type":"code","execution_count":5,"id":"47e5d05f","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:58.175783Z","iopub.status.busy":"2024-06-22T11:31:58.175353Z","iopub.status.idle":"2024-06-22T11:31:58.189764Z","shell.execute_reply":"2024-06-22T11:31:58.18849Z"},"papermill":{"duration":0.026361,"end_time":"2024-06-22T11:31:58.192734","exception":false,"start_time":"2024-06-22T11:31:58.166373","status":"completed"},"tags":[]},"outputs":[],"source":["#seprrately store the datasets of each category for to plot the data \n","df1=df[df[\"Species\"]==0]\n","df2=df[df[\"Species\"]==1]\n","df3=df[df[\"Species\"]==2]"]},{"cell_type":"code","execution_count":6,"id":"02446b62","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:58.209773Z","iopub.status.busy":"2024-06-22T11:31:58.209356Z","iopub.status.idle":"2024-06-22T11:31:58.225289Z","shell.execute_reply":"2024-06-22T11:31:58.224243Z"},"papermill":{"duration":0.027307,"end_time":"2024-06-22T11:31:58.227784","exception":false,"start_time":"2024-06-22T11:31:58.200477","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  Species\n","0   1            5.1           3.5            1.4           0.2        0\n","1   2            4.9           3.0            1.4           0.2        0\n","2   3            4.7           3.2            1.3           0.2        0\n","3   4            4.6           3.1            1.5           0.2        0\n","4   5            5.0           3.6            1.4           0.2        0"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["df1.head()"]},{"cell_type":"code","execution_count":7,"id":"0a0718a7","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:58.246027Z","iopub.status.busy":"2024-06-22T11:31:58.24512Z","iopub.status.idle":"2024-06-22T11:31:58.261125Z","shell.execute_reply":"2024-06-22T11:31:58.259744Z"},"papermill":{"duration":0.027889,"end_time":"2024-06-22T11:31:58.263667","exception":false,"start_time":"2024-06-22T11:31:58.235778","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>51</td>\n","      <td>7.0</td>\n","      <td>3.2</td>\n","      <td>4.7</td>\n","      <td>1.4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>52</td>\n","      <td>6.4</td>\n","      <td>3.2</td>\n","      <td>4.5</td>\n","      <td>1.5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>53</td>\n","      <td>6.9</td>\n","      <td>3.1</td>\n","      <td>4.9</td>\n","      <td>1.5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>54</td>\n","      <td>5.5</td>\n","      <td>2.3</td>\n","      <td>4.0</td>\n","      <td>1.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>55</td>\n","      <td>6.5</td>\n","      <td>2.8</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  Species\n","50  51            7.0           3.2            4.7           1.4        1\n","51  52            6.4           3.2            4.5           1.5        1\n","52  53            6.9           3.1            4.9           1.5        1\n","53  54            5.5           2.3            4.0           1.3        1\n","54  55            6.5           2.8            4.6           1.5        1"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["df2.head()"]},{"cell_type":"code","execution_count":8,"id":"77c2b737","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:58.282181Z","iopub.status.busy":"2024-06-22T11:31:58.281732Z","iopub.status.idle":"2024-06-22T11:31:58.298271Z","shell.execute_reply":"2024-06-22T11:31:58.29689Z"},"papermill":{"duration":0.029039,"end_time":"2024-06-22T11:31:58.301094","exception":false,"start_time":"2024-06-22T11:31:58.272055","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>100</th>\n","      <td>101</td>\n","      <td>6.3</td>\n","      <td>3.3</td>\n","      <td>6.0</td>\n","      <td>2.5</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>101</th>\n","      <td>102</td>\n","      <td>5.8</td>\n","      <td>2.7</td>\n","      <td>5.1</td>\n","      <td>1.9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>103</td>\n","      <td>7.1</td>\n","      <td>3.0</td>\n","      <td>5.9</td>\n","      <td>2.1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>104</td>\n","      <td>6.3</td>\n","      <td>2.9</td>\n","      <td>5.6</td>\n","      <td>1.8</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>105</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.8</td>\n","      <td>2.2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  Species\n","100  101            6.3           3.3            6.0           2.5        2\n","101  102            5.8           2.7            5.1           1.9        2\n","102  103            7.1           3.0            5.9           2.1        2\n","103  104            6.3           2.9            5.6           1.8        2\n","104  105            6.5           3.0            5.8           2.2        2"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["df3.head()"]},{"cell_type":"code","execution_count":9,"id":"2252360d","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:58.319896Z","iopub.status.busy":"2024-06-22T11:31:58.319472Z","iopub.status.idle":"2024-06-22T11:31:58.72723Z","shell.execute_reply":"2024-06-22T11:31:58.726036Z"},"papermill":{"duration":0.420271,"end_time":"2024-06-22T11:31:58.729899","exception":false,"start_time":"2024-06-22T11:31:58.309628","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# plot the data based patellength petalwidth\n","plt.scatter(df1[\"PetalLengthCm\"],df1[\"PetalWidthCm\"],marker='o',color='red',label=\"Setosa\")\n","plt.scatter(df2[\"PetalLengthCm\"],df2[\"PetalWidthCm\"],marker='*',color='blue',label=\"Vesicolor\")\n","plt.scatter(df3[\"PetalLengthCm\"],df3[\"PetalWidthCm\"],marker='+',color='green',label=\"verginica\")\n","plt.xlabel(\"PetalLengthCm\")\n","plt.ylabel(\"PetalWidthCm\")\n","plt.title(\"Iris data set\")\n","plt.legend()\n","plt.show()\n"]},{"cell_type":"code","execution_count":10,"id":"408a12c5","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:58.7506Z","iopub.status.busy":"2024-06-22T11:31:58.750163Z","iopub.status.idle":"2024-06-22T11:31:59.058272Z","shell.execute_reply":"2024-06-22T11:31:59.056971Z"},"papermill":{"duration":0.322064,"end_time":"2024-06-22T11:31:59.061346","exception":false,"start_time":"2024-06-22T11:31:58.739282","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.model_selection import cross_val_score\n","df.drop([\"Id\"],axis=1,inplace=True)"]},{"cell_type":"code","execution_count":11,"id":"c95731bc","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:59.082647Z","iopub.status.busy":"2024-06-22T11:31:59.082195Z","iopub.status.idle":"2024-06-22T11:31:59.097243Z","shell.execute_reply":"2024-06-22T11:31:59.09611Z"},"papermill":{"duration":0.029057,"end_time":"2024-06-22T11:31:59.099867","exception":false,"start_time":"2024-06-22T11:31:59.07081","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  Species\n","0            5.1           3.5            1.4           0.2        0\n","1            4.9           3.0            1.4           0.2        0\n","2            4.7           3.2            1.3           0.2        0\n","3            4.6           3.1            1.5           0.2        0\n","4            5.0           3.6            1.4           0.2        0"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":12,"id":"67ef2be0","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:59.120342Z","iopub.status.busy":"2024-06-22T11:31:59.119916Z","iopub.status.idle":"2024-06-22T11:31:59.130886Z","shell.execute_reply":"2024-06-22T11:31:59.129775Z"},"papermill":{"duration":0.024121,"end_time":"2024-06-22T11:31:59.133507","exception":false,"start_time":"2024-06-22T11:31:59.109386","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","145    2\n","146    2\n","147    2\n","148    2\n","149    2\n","Name: Species, Length: 150, dtype: int64"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["data=df.drop([\"Species\"],axis=1)\n","target=df[\"Species\"]\n","target"]},{"cell_type":"code","execution_count":13,"id":"66c29b4d","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:59.154376Z","iopub.status.busy":"2024-06-22T11:31:59.153961Z","iopub.status.idle":"2024-06-22T11:31:59.178221Z","shell.execute_reply":"2024-06-22T11:31:59.176976Z"},"papermill":{"duration":0.038,"end_time":"2024-06-22T11:31:59.181083","exception":false,"start_time":"2024-06-22T11:31:59.143083","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.900681</td>\n","      <td>1.032057</td>\n","      <td>-1.341272</td>\n","      <td>-1.312977</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-1.143017</td>\n","      <td>-0.124958</td>\n","      <td>-1.341272</td>\n","      <td>-1.312977</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1.385353</td>\n","      <td>0.337848</td>\n","      <td>-1.398138</td>\n","      <td>-1.312977</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-1.506521</td>\n","      <td>0.106445</td>\n","      <td>-1.284407</td>\n","      <td>-1.312977</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-1.021849</td>\n","      <td>1.263460</td>\n","      <td>-1.341272</td>\n","      <td>-1.312977</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1.038005</td>\n","      <td>-0.124958</td>\n","      <td>0.819624</td>\n","      <td>1.447956</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>0.553333</td>\n","      <td>-1.281972</td>\n","      <td>0.705893</td>\n","      <td>0.922064</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>0.795669</td>\n","      <td>-0.124958</td>\n","      <td>0.819624</td>\n","      <td>1.053537</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>0.432165</td>\n","      <td>0.800654</td>\n","      <td>0.933356</td>\n","      <td>1.447956</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>0.068662</td>\n","      <td>-0.124958</td>\n","      <td>0.762759</td>\n","      <td>0.790591</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 4 columns</p>\n","</div>"],"text/plain":["     SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm\n","0        -0.900681      1.032057      -1.341272     -1.312977\n","1        -1.143017     -0.124958      -1.341272     -1.312977\n","2        -1.385353      0.337848      -1.398138     -1.312977\n","3        -1.506521      0.106445      -1.284407     -1.312977\n","4        -1.021849      1.263460      -1.341272     -1.312977\n","..             ...           ...            ...           ...\n","145       1.038005     -0.124958       0.819624      1.447956\n","146       0.553333     -1.281972       0.705893      0.922064\n","147       0.795669     -0.124958       0.819624      1.053537\n","148       0.432165      0.800654       0.933356      1.447956\n","149       0.068662     -0.124958       0.762759      0.790591\n","\n","[150 rows x 4 columns]"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["#Standardize the dataset\n","from sklearn.preprocessing import StandardScaler\n","sc=StandardScaler()\n","data=sc.fit_transform(df.drop([\"Species\"],axis=1))\n","data=pd.DataFrame(data,columns=df.columns[:-1])\n","data"]},{"cell_type":"code","execution_count":14,"id":"51e20d48","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:31:59.204977Z","iopub.status.busy":"2024-06-22T11:31:59.203734Z","iopub.status.idle":"2024-06-22T11:32:02.094894Z","shell.execute_reply":"2024-06-22T11:32:02.093618Z"},"papermill":{"duration":2.906562,"end_time":"2024-06-22T11:32:02.097787","exception":false,"start_time":"2024-06-22T11:31:59.191225","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["[0.9533333333333334, 0.9533333333333334, 0.9533333333333334, 0.9466666666666667, 0.9533333333333334, 0.9666666666666666, 0.9533333333333334, 0.9666666666666668, 0.9533333333333334, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9533333333333334, 0.96, 0.96, 0.9666666666666666, 0.9466666666666667, 0.9533333333333334, 0.9400000000000001, 0.9466666666666667, 0.9400000000000001, 0.9533333333333334, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.9466666666666667, 0.9400000000000001, 0.9333333333333333, 0.9133333333333333, 0.9133333333333333, 0.9, 0.9066666666666666, 0.9, 0.9]\n"]}],"source":["#finding best k value\n","accuracy_rate=[]\n","for i in range (1,40):\n","    knn=KNeighborsClassifier(n_neighbors=i)\n","    score=cross_val_score(knn,data,target,cv=10)\n","    accuracy_rate.append(score.mean())\n","print(accuracy_rate)\n","    "]},{"cell_type":"code","execution_count":15,"id":"6ca81b32","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:32:02.119803Z","iopub.status.busy":"2024-06-22T11:32:02.119385Z","iopub.status.idle":"2024-06-22T11:32:02.446545Z","shell.execute_reply":"2024-06-22T11:32:02.445385Z"},"papermill":{"duration":0.341666,"end_time":"2024-06-22T11:32:02.449461","exception":false,"start_time":"2024-06-22T11:32:02.107795","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["#plot the graph using accuracy rate\n","plt.plot(range(1,40),accuracy_rate,marker=\"o\")\n","plt.xlabel(\"Iterations\")\n","plt.ylabel(\"Accuracy_rate\",)\n","plt.title(\"Elbow method\")\n","plt.show()"]},{"cell_type":"code","execution_count":16,"id":"e898b4ac","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:32:02.473723Z","iopub.status.busy":"2024-06-22T11:32:02.473159Z","iopub.status.idle":"2024-06-22T11:32:02.483974Z","shell.execute_reply":"2024-06-22T11:32:02.482686Z"},"papermill":{"duration":0.026384,"end_time":"2024-06-22T11:32:02.486485","exception":false,"start_time":"2024-06-22T11:32:02.460101","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(data,target,random_state=30)"]},{"cell_type":"code","execution_count":17,"id":"c54366d4","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:32:02.509443Z","iopub.status.busy":"2024-06-22T11:32:02.509055Z","iopub.status.idle":"2024-06-22T11:32:02.521808Z","shell.execute_reply":"2024-06-22T11:32:02.520705Z"},"papermill":{"duration":0.027207,"end_time":"2024-06-22T11:32:02.524441","exception":false,"start_time":"2024-06-22T11:32:02.497234","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=30)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=30)</pre></div></div></div></div></div>"],"text/plain":["KNeighborsClassifier(n_neighbors=30)"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["knn=KNeighborsClassifier(n_neighbors=30)\n","knn.fit(x_train,y_train)"]},{"cell_type":"code","execution_count":18,"id":"aa57ca10","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:32:02.549063Z","iopub.status.busy":"2024-06-22T11:32:02.547905Z","iopub.status.idle":"2024-06-22T11:32:02.564593Z","shell.execute_reply":"2024-06-22T11:32:02.563165Z"},"papermill":{"duration":0.032123,"end_time":"2024-06-22T11:32:02.567533","exception":false,"start_time":"2024-06-22T11:32:02.53541","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["with 25\n","\n","[[12  0  0]\n"," [ 0 11  0]\n"," [ 0  4 11]]\n"]}],"source":["#now test the model \n","y_pred=knn.predict(x_test)\n","from sklearn.metrics import confusion_matrix,classification_report\n","\n","print(\"with 25\\n\")\n","\n","print(confusion_matrix(y_test,y_pred))\n"]},{"cell_type":"code","execution_count":19,"id":"2098a1b0","metadata":{"execution":{"iopub.execute_input":"2024-06-22T11:32:02.592514Z","iopub.status.busy":"2024-06-22T11:32:02.592079Z","iopub.status.idle":"2024-06-22T11:32:02.61151Z","shell.execute_reply":"2024-06-22T11:32:02.609745Z"},"papermill":{"duration":0.034948,"end_time":"2024-06-22T11:32:02.614298","exception":false,"start_time":"2024-06-22T11:32:02.57935","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        12\n","           1       0.73      1.00      0.85        11\n","           2       1.00      0.73      0.85        15\n","\n","    accuracy                           0.89        38\n","   macro avg       0.91      0.91      0.90        38\n","weighted avg       0.92      0.89      0.89        38\n","\n"]}],"source":["print(classification_report(y_test,y_pred))"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":4247,"sourceId":6570,"sourceType":"datasetVersion"},{"datasetId":5208934,"sourceId":8687723,"sourceType":"datasetVersion"}],"dockerImageVersionId":30732,"isGpuEnabled":false,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":11.148142,"end_time":"2024-06-22T11:32:03.249134","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-06-22T11:31:52.100992","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}